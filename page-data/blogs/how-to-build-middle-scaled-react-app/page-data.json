{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/how-to-build-middle-scaled-react-app","result":{"data":{"markdownRemark":{"html":"<p>There are already quite a lot of medium tutorials teaching people out there for how to make a proper react application using react + redux stack. And people even developed some great ideas like <a href=\"https://dvajs.com/\">dva</a> to reduce boilerplate and pain to setup the whole stack.</p>\n<p><a href=\"https://dvajs.com/\">dva</a> is really nice, I loved the concept of it so much, It reminds me of ruby on rails a few years ago. However, besides the great benefits full-featured store management libraries could provide us, it has it's own shorthands as well.</p>\n<ol>\n<li>libs like <a href=\"https://dvajs.com/\">dva</a> is a bit <strong>over-encapsulated</strong>. so new joiner hardly know how does this magically work unless he/she spend quite sometime doing todo-lists following another tutorial.</li>\n<li><strong>Modularity design is not straight forward</strong>. e.g. user as a module, orders as a module etc. It seems very ideal, you could even do code splitting by doing this, and only load necessary reducers / sagas whenever necessary. But in the end module-module will become a headache.</li>\n<li><strong>Modularity design does not fit \"page centric\" designs</strong>. It turns out that in medium sized application, people are more focused on \"What will this page do\" rather than \"what will this chunk of section in the page will do\".</li>\n<li><strong>Cannot find a way to integrate with other popular libraries</strong>. e.g. redux-form</li>\n</ol>\n<p><strong>So what's the solution?</strong></p>\n<p>We could use all small pieces of react ecosystem to build the suitable framework of our own! The process is super hard, but finally I have found a way to keep everything under control.</p>\n<h2>TL;DR;</h2>\n<ol>\n<li>Use <strong>sock drawer</strong> design rather than modular design for your store and folder structure</li>\n<li>Use <strong>pages</strong> folder to control pages and one time components</li>\n<li>Put <strong>route configs in one file</strong></li>\n<li>Generalize <strong>restful http calls by \"resource\"</strong></li>\n<li>Control the flow using <strong>redux-saga</strong></li>\n<li>If you encountered any form, <strong>just use redux-form</strong> (or formik). Trust me.</li>\n<li><strong>Use url to control page state</strong> as much as possible</li>\n<li><strong>Control # of action types</strong> and reducers being mounted to the rootReducer.</li>\n</ol>\n<h2>Sock drawer Project Layout</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app\n├── Root.jsx\n├── actions\n│   ├── loading.js\n│   ├── messages.js\n│   ├── queryParams.js\n│   ├── resources.js\n│   └── user.js\n├── app.jsx\n├── components\n│   ├── Bundle\n│   ├── Form\n│   ├── Comonent1\n│   ├── Comonent2\n│   └── Message\n├── constants\n│   ├── ActionTypes.js\n│   ├── Forms.js\n│   ├── Loadings.js\n│   ├── Modals.js\n│   ├── Resources.js\n├── pages\n│   ├── DashboardPage\n│   ├── OrdersPage\n│   ├── AuthPages\n│   └── NotFound\n├── polyfill.js\n├── reducers\n│   ├── index.js\n│   ├── loadings.js\n│   ├── messages.js\n│   └── resources\n├── sagas\n│   ├── resource.js\n│   ├── auth\n│   ├── index.js\n├── selectors\n│   ├── getResource.js\n│   ├── getResources.js\n│   ├── getSearch.js\n│   └── isLoading.js\n├── stores\n│   └── index.js\n├── styles\n│   ├── breakpoints.scss\n│   └── variables.scss\n└── utils\n    ├── network.js\n    └── redirect.js</code></pre></div>\n<p>as shown in the gist above, the project structure is purely <strong>sock drawer design</strong>.</p>\n<p>There is one folder that is quite interesting: <code class=\"language-text\">pages</code> folder. It's similar to the traditional <code class=\"language-text\">containers</code> if you came from the redux-todo-list tutorial. They serve the same functionality, but differs in a few aspects:</p>\n<ol>\n<li><strong>allow non-container components to be presented in this folder</strong>. We found that some top level page components may <strong>not</strong> have to do anything with <code class=\"language-text\">connect</code> HoC</li>\n<li><strong>nest a components folder inside the page folder</strong>, allowing further reusable page level components.</li>\n</ol>\n<h2>Pages folder</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">app/pages\n├── AppPages\n│   ├── Layout.jsx\n│   ├── Dashboard\n│   │   ├── Dashboard.jsx\n│   │   ├── Dashboard.scss\n│   │   ├── __tests__\n│   │   │   ├── Dashboard.spec.jsx\n│   │   │   └── __snapshots__\n│   │   └── index.js\n│   ├── __tests__\n│   │   └── Layout.spec.jsx\n│   └── components\n│       ├── ToastMessages\n│       │   ├── Messages.jsx\n│       │   ├── Messages.scss\n│       │   ├── __test__\n│       │   └── index.js\n│       └── TopNavbar\n│           ├── TopNavbar.jsx\n│           └── index.js\n├── AuthPages\n│   ├── Layout.jsx\n│   ├── Layout.scss\n│   ├── AuthPages.scss\n│   ├── ForgotPassword\n│   │   ├── ForgotPassword.jsx\n│   │   ├── ForgotPasswordForm.jsx\n│   │   ├── __tests__\n│   │   │   ├── ForgotPassword.spec.jsx\n│   │   │   ├── ForgotPasswordForm.spec.jsx\n│   │   │   └── __snapshots__\n│   │   └── index.js\n│   ├── Login\n│   │   ├── Login.jsx\n│   │   ├── LoginForm.jsx\n│   │   ├── __tests__\n│   │   │   ├── Login.spec.jsx\n│   │   │   ├── LoginForm.spec.jsx\n│   │   │   └── __snapshots__\n│   │   └── index.js\n│   ├── Register\n│   │   ├── Register.jsx\n│   │   ├── RegisterForm.jsx\n│   │   ├── __tests__\n│   │   │   ├── Register.spec.jsx\n│   │   │   ├── RegisterForm.spec.jsx\n│   │   │   └── __snapshots__\n│   │   └── index.js\n│   ├── ResetPassword\n│   │   ├── ResetPassword.jsx\n│   │   ├── ResetPasswordForm.jsx\n│   │   └── index.js\n│   ├── VerifyEmail\n│   │   ├── VerifyEmail.jsx\n│   │   ├── __tests__\n│   │   │   ├── VerifyEmail.spec.jsx\n│   │   │   └── __snapshots__\n│   │   └── index.js\n│   └── components\n│       └── CollapsibleMessages\n│           ├── CollapsibleMessages.jsx\n│           └── index.js\n└── NotFound\n    ├── NotFound.jsx\n    ├── __tests__\n    │   └── NotFound.spec.jsx\n    └── index.js</code></pre></div>\n<p>In real life, we wanted to encourage to group similar functionalities using components. But here is an embarrassing situation:</p>\n<ol>\n<li>some of the components is <strong>specific to a page</strong></li>\n<li>some of the components need to <strong>access redux store</strong></li>\n<li>some of the components need to <strong>access URL</strong></li>\n</ol>\n<p>If any component falls into above 3 categories, it indicates that the component should be place in the <code class=\"language-text\">pages</code> folder. Based on a simple rule: make private first, then protected, finally public.</p>\n<ol>\n<li>if a component is only used by a page, put that in <code class=\"language-text\">pages/XXXPage/components</code> folder</li>\n<li>if a component is being shared by 2 pages, extra 1 layer up to the top. <code class=\"language-text\">pages/components</code></li>\n<li>if a component is being shared by 3 pages, and not accessing the store, put it in the <code class=\"language-text\">app/components</code> folder.</li>\n</ol>\n<p>I found that following those simple rules make our application much readable, and encourage engineers to split code in a more organized way. Previously when we did not have this rules built in, I found that we easily achieve a 1000 lines container components which is absolutely horrible…</p>\n<p>In such case, to do code splitting is relatively simpler as well. Because each folder has it's own index.js, you could choose to use <code class=\"language-text\">react-lodable</code> (updated: use <code class=\"language-text\">loadale-component</code> now)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">loader<span class=\"token punctuation\">,</span> loaderProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Loadable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Dashboard'</span> <span class=\"token comment\">/* webpackChunkName: \"dashboard-page\" */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function-variable function\">loading</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>Loading <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Put router config in one file</h2>\n<p><code class=\"language-text\">react-router@4</code> enables us to write routes in a very flexible way. It unlocks the power of extremely modular way to do routing. But in my personal experience, I found that gathering all route config in one single file is much easier for new comers / looking back into an old project to get all the routes.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>Router history<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>history<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Switch<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Welcome<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/register\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Register<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/login\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Login<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/forgot-password\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ForgotPassword<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/verify-email\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>VerifyEmail<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/reset-password\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ResetPassword<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/dashboard\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Dashboard<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/orders\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Orders<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/orders/:id\"</span> exact component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>OrderDetail<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>NotFound<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Switch<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Router<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>In such way it's crystal clear that what feature is enabled in the application.</p>\n<h2>Generalize restful http calls with resources</h2>\n<p>GraphQL is already out there for a while. I think up to this moment, if you are building an application <strong>from scratch</strong>, I strongly recommend <strong>using GraphQL</strong> as the server/frontend interface.</p>\n<p>However, not all applications have this luxury of using GraphQL, most of the legacy projects still need to utilise good old restful API.</p>\n<p>So if your restful API has some consistent convention, it'll be best to find a way to generalise it.\n90% of the cases, typical request goes through those steps</p>\n<ol>\n<li>resource request (from <code class=\"language-text\">componentDidMount</code>, <code class=\"language-text\">useEffect</code>, <code class=\"language-text\">handleClick</code> etc.)</li>\n<li>start loading</li>\n<li>make the request</li>\n<li>display a toast message (success / failure)</li>\n<li>handle global http response error based on error code if there were an error</li>\n<li>tell store that resource is fetched and need to run reducer to update the store</li>\n<li>end loading</li>\n<li>component need to select the resource / loading status out of the store using selector</li>\n</ol>\n<p>We could see that step 1, 2, 4, 6, 7 clearly needs an action attached to them.</p>\n<p>Therefore i invented this concept called resources to systematically handle those common actions.</p>\n<p>First i will create a file named <code class=\"language-text\">constant/Resources.js</code> , I will give each resource a name. But as we could see, each resource actually have at least 5 actions related. Here comes a very small yet handy utility: makeResource .</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">makeResource</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">,</span> opts <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> resourceUpper <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> resourceConstants <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">RESOURCE</span><span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">LOADING</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_LOADING</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CLEAR</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">CLEAR_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>resourceConstants<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">CREATE_DONE</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">CREATE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_DONE</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">CREATE_REQUEST</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">CREATE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_REQUEST</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'R'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>resourceConstants<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">FETCH_DONE</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">FETCH_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_DONE</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">FETCH_REQUEST</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">FETCH_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_REQUEST</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'U'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>resourceConstants<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">UPDATE_DONE</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">UPDATE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_DONE</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">UPDATE_REQUEST</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">UPDATE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_REQUEST</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">'D'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>resourceConstants<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">DELETE_DONE</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">DELETE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_DONE</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">DELETE_REQUEST</span><span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">DELETE_</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>resourceUpper<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">_REQUEST</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> resourceConstants\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>to use it, just do sth like</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">ORDERS</span> <span class=\"token operator\">=</span> <span class=\"token function\">makeResource</span><span class=\"token punctuation\">(</span><span class=\"token string\">'order'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CRUD'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// {</span>\n<span class=\"token comment\">//   RESOURCE: 'order',</span>\n<span class=\"token comment\">//   FETCH_REQUEST: 'FETCH_ORDER_REQUEST',</span>\n<span class=\"token comment\">//   FETCH_DONE: 'FETCH_ORDER_DONE',</span>\n<span class=\"token comment\">//   CREATE_REQUEST: 'FETCH_ORDER_DONE',</span>\n<span class=\"token comment\">//   CREATE_DONE: 'CREATE_ORDER_DONE',</span>\n<span class=\"token comment\">//   UPDATE_REQUEST: 'UPDATE_ORDER_DONE',</span>\n<span class=\"token comment\">//   UPDATE_DONE: 'UPDATE_ORDER_DONE',</span>\n<span class=\"token comment\">//   DELETE_REQUEST: 'DELETE_ORDER_DONE',</span>\n<span class=\"token comment\">//   DELETE_DONE: 'DELETE_ORDER_DONE',</span>\n<span class=\"token comment\">// }</span></code></pre></div>\n<p>next, we need to have a suite of generic actions that will accept those special constants</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">update</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">UPDATE_REQUEST</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nupdate<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">UPDATE_DONE</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">create</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">CREATE_REQUEST</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\ncreate<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">CREATE_DONE</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">remove</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">DELETE_REQUEST</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nremove<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">DELETE_DONE</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetch</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">FETCH_REQUEST</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nfetch<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">done</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token parameter\">payload</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">FETCH_DONE</span><span class=\"token punctuation\">,</span>\n  payload<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clear</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">resource</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  type<span class=\"token punctuation\">:</span> resource<span class=\"token punctuation\">.</span><span class=\"token constant\">CLEAR</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>for the reducer, actually it's quite easy to generalize as well, but the detailed implementation is related to how the restful API is being designed, so i will make a very extensible reducer</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> combineReducers <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> resources <span class=\"token keyword\">from</span> <span class=\"token string\">'app/constants/Resources'</span>\n\n<span class=\"token keyword\">import</span> order <span class=\"token keyword\">from</span> <span class=\"token string\">'./order'</span>\n\n<span class=\"token keyword\">const</span> extensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>resources<span class=\"token punctuation\">.</span><span class=\"token constant\">CONNECTION</span><span class=\"token punctuation\">.</span><span class=\"token constant\">ORDER</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> order<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> resourceReducers <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>resources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> resources<span class=\"token punctuation\">[</span>cur<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">.</span><span class=\"token constant\">FETCH_DONE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    acc<span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">.</span><span class=\"token constant\">RESOURCE</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">createResourceReducer</span><span class=\"token punctuation\">(</span>\n      resource<span class=\"token punctuation\">,</span>\n      extensions<span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">.</span><span class=\"token constant\">RESOURCE</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    acc<span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">.</span><span class=\"token constant\">RESOURCE</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> extensions<span class=\"token punctuation\">[</span>resource<span class=\"token punctuation\">.</span><span class=\"token constant\">RESOURCE</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> acc\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span>resourceReducers<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">createResourceReducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resource<span class=\"token punctuation\">,</span> extension</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">FETCH_DONE</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CLEAR</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> resource\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">reducer</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// those actions are ensured to be in the resource</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token constant\">FETCH_DONE</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> action<span class=\"token punctuation\">.</span>payload\n      <span class=\"token keyword\">case</span> <span class=\"token constant\">CLEAR</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> extension <span class=\"token operator\">?</span> <span class=\"token function\">extension</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> state\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In reality, the API that responses data could be quite different, so a very flexible and pluggable reducer is needed here.</p>\n<p>In components, upon dispatching a request, you just simply do this.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">fetchOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n  fetchOrder<span class=\"token punctuation\">:</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>Order<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>YourComponent<span class=\"token punctuation\">)</span></code></pre></div>\n<p>this vastly simplified the tedious job to have a dedicated action type for <code class=\"language-text\">FETCH_ORDER_REQUEST</code> and attach an useless action <code class=\"language-text\">fetchOrderRequest</code> for it.</p>\n<h2>Control the flow using redux-saga</h2>\n<p>we have covered the content resource in the previous section. It seems like the we need a tool to control the call sequence and centralize the management of it. Therefore we need redux-saga</p>\n<p>With the powerful resource concept, the flow we mentioned above is really easy</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> put<span class=\"token punctuation\">,</span> call<span class=\"token punctuation\">,</span> fork <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-saga/effects'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> takeLatest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-saga'</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> addMessage <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/actions/messages'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> startLoading<span class=\"token punctuation\">,</span> endLoading <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/actions/loading'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">ORDER</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/constants/Resources'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fetch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/actions/resources'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> apiClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/utils/network'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span> <span class=\"token function\">fetchOrder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token function\">startLoading</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ORDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">yield</span> <span class=\"token function\">call</span><span class=\"token punctuation\">(</span>apiClient<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token punctuation\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      url<span class=\"token punctuation\">:</span> <span class=\"token string\">'/api/order/'</span> <span class=\"token operator\">+</span> action<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ORDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">addMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        style<span class=\"token punctuation\">:</span> <span class=\"token string\">'danger'</span><span class=\"token punctuation\">,</span>\n        message<span class=\"token punctuation\">:</span> payload<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">,</span>\n        details<span class=\"token punctuation\">:</span> payload<span class=\"token punctuation\">.</span>details<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">yield</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token function\">endLoading</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ORDER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">yield</span> <span class=\"token function\">fork</span><span class=\"token punctuation\">(</span>takeLatest<span class=\"token punctuation\">,</span> <span class=\"token constant\">ORDER</span><span class=\"token punctuation\">.</span><span class=\"token constant\">FETCH_REQUEST</span><span class=\"token punctuation\">,</span> fetchOrder<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>loud and clear</p>\n<h2>redux-form</h2>\n<p>When it comes to form, usually it's very complicated with React. However, redux-form ease the pain.</p>\n<p>here is a complete example of how a form could be handled together with redux-form. I won't be going through the details in redux-form usages</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Form <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-bootststrap'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> reduxForm<span class=\"token punctuation\">,</span> Field <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-form'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Link <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span>\n\n<span class=\"token keyword\">import</span> isLoading <span class=\"token keyword\">from</span> <span class=\"token string\">'app/selectors/isLoading'</span>\n<span class=\"token keyword\">import</span> getResource <span class=\"token keyword\">from</span> <span class=\"token string\">'app/selectors/getResource'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">USER</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/constants/Resources'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">PROFILE_FORM</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/constants/Forms'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> fetch<span class=\"token punctuation\">,</span> update <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/actions/resources'</span>\n\n<span class=\"token keyword\">import</span> gridFormGroup <span class=\"token keyword\">from</span> <span class=\"token string\">'app/components/Form/gridFormGroup'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InputField <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/components/Form/ReduxFormFields'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> email<span class=\"token punctuation\">,</span> maxLength<span class=\"token punctuation\">,</span> required <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'app/components/Form/validators'</span>\n\n<span class=\"token keyword\">const</span> InputGroup <span class=\"token operator\">=</span> <span class=\"token function\">gridFormGroup</span><span class=\"token punctuation\">(</span>InputField<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> validateEmail <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token function\">required</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">email</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Invalid email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">maxLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">254</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> validateName <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token function\">maxLength</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountProfileForm</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    fetchUser<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n    handleSubmit<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span><span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Form</span></span> <span class=\"token attr-name\">horizontal</span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Field</span></span>\n          <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">validate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>validateName<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">maxLength</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>200<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>InputGroup<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Full Name<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>(Optional)<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Field</span></span>\n          <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">validate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>validateEmail<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>InputGroup<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">maxLength</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>254<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">info</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Email address<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">required</span>\n          <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Email<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Field</span></span>\n          <span class=\"token attr-name\">disabled</span>\n          <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>InputGroup<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">info</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/edit-password<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Change Password</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Password<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>• • • • • • • •<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Form</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getInitialValues</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">user</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n  email<span class=\"token punctuation\">:</span> user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">transformPayload</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">formData</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> formData<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n  email<span class=\"token punctuation\">:</span> formData<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapStatesToProps</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">state</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  isLoading<span class=\"token punctuation\">:</span> <span class=\"token function\">isLoading</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token constant\">USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  initialValues<span class=\"token punctuation\">:</span> <span class=\"token function\">getInitialValues</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResource</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">,</span> <span class=\"token constant\">USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> mapDispatchToProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">onSubmit</span><span class=\"token punctuation\">:</span> <span class=\"token parameter\">formData</span> <span class=\"token operator\">=></span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token function\">transformPayload</span><span class=\"token punctuation\">(</span>formData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  fetchUser<span class=\"token punctuation\">:</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n  mapStatesToProps<span class=\"token punctuation\">,</span>\n  mapDispatchToProps\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">reduxForm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    enableReinitialize<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    form<span class=\"token punctuation\">:</span> <span class=\"token constant\">PROFILE_FORM</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AccountProfileForm<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>A few concepts to highlight</p>\n<ol>\n<li>use <code class=\"language-text\">enableReinitialize</code> is a power flag empowers async data workflow. e.g. for those forms needs to be edited by user, you could use this option to hydrate data into the form</li>\n<li><code class=\"language-text\">getInitialValues</code> is a common function I usually use for transforming the raw API response to what the form needs. In some cases, we may need to map raw API response to our frontend form like <code class=\"language-text\">name</code> -> <code class=\"language-text\">firstName</code> + <code class=\"language-text\">lastName</code></li>\n<li><code class=\"language-text\">transformPayload</code> is a common function I usually make for transforming the form value to what we need to post back to API. It allows us to opt in other hidden / inferred values. e.g. <code class=\"language-text\">firstName</code> + <code class=\"language-text\">lastName</code> -> <code class=\"language-text\">name</code>.</li>\n<li>try to make validation functions as atom as possible, most of the times you could do a chain of validations like <code class=\"language-text\">[requiredundefined minLength(50)undefined maxLength(250)]</code></li>\n<li>try to build a HoC like <code class=\"language-text\">gridFormGroup</code> to consolidate error messages, hints, horizontal form layout etc, see below</li>\n</ol>\n<h3>gridFormGroup HoC</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">gridFormGroup</span><span class=\"token punctuation\">(</span>\n  <span class=\"token parameter\">ReduxFormField<span class=\"token punctuation\">,</span> \n  grid <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> \n    label<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>sm<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n    input<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>sm<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> \n    help<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>smOffset<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> sm<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">class</span> <span class=\"token class-name\">ReduxFormGroup</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n        input<span class=\"token punctuation\">,</span>\n        meta<span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">,</span>\n        info<span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>rest\n      <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> touched<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> meta<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> displayError <span class=\"token operator\">=</span> touched <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> errorMessage <span class=\"token operator\">=</span> error <span class=\"token operator\">&amp;&amp;</span> error<span class=\"token punctuation\">.</span>size <span class=\"token operator\">?</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> error<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">FormGroup</span></span>\n          <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">formGroupProps</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">controlId</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">validationState</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>displayError <span class=\"token operator\">?</span> <span class=\"token string\">'error'</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Col</span></span>\n            <span class=\"token attr-name\">as</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ControlLabel<span class=\"token punctuation\">}</span></span>\n            <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">grid</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">label</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>label<span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Col</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Col</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">grid</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">input</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ReduxFormField</span></span>\n              <span class=\"token attr-name\">input</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>input<span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">meta</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>meta<span class=\"token punctuation\">}</span></span>\n              <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">rest</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Col</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>displayError <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Col</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">grid</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">help</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HelpBlock</span></span> <span class=\"token attr-name\">variant</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>error<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>errorMessage<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">HelpBlock</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Col</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>info <span class=\"token operator\">&amp;&amp;</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Col</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">grid</span><span class=\"token punctuation\">.</span><span class=\"token attr-value\">help</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">HelpBlock</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>info<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">HelpBlock</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Col</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">FormGroup</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> ReduxFormGroup<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Use URL to control state as much as possible</h2>\n<p>when an action is taken, we need to display some intermediate UI element to let the user perform some actions. We found that for cases like</p>\n<ol>\n<li>open /close modal</li>\n<li>tab change</li>\n<li>filter change in a list page</li>\n</ol>\n<p>it will be the best to purely use URL to control them</p>\n<h3>For a modal</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/orders/:id/delete<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DeleteOrderModal</span></span>\n      <span class=\"token attr-name\">show</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">connection</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> match <span class=\"token operator\">&amp;&amp;</span> match<span class=\"token punctuation\">.</span>params <span class=\"token operator\">&amp;&amp;</span> match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Button</span></span> <span class=\"token attr-name\">danger</span> <span class=\"token attr-name\">to</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/orders/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>orders<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/delete</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Delete Order</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Button</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>In such case, to open the modal, you just point the user to specific route, no hassle at all, and it's completely under control</p>\n<h3>For Tabs</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// in route.jsx</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>ProfileSettingsPage<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/notifications<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>NotificationsSettingsPage<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token comment\">// in settings page</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">match</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tab</span></span> <span class=\"token attr-name\">active</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>match<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/profile<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Profile</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tab</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n   </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/notifications<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">match</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> \n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Tab</span></span> <span class=\"token attr-name\">active</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span>match<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/settings/notifications<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Notifications</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tab</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Route</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Tabs</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3>For Filters</h3>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// in route.jsx</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Route</span></span> <span class=\"token attr-name\">path</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>/orders<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">exact</span> <span class=\"token attr-name\">component</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>OrdersPage<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token comment\">// in OrdersPage.jsx</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">OrdersPage</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">componentDidUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> querystring<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">fetchOrders</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      page<span class=\"token punctuation\">:</span> query<span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function-variable function\">handlePageChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">page</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/orders?page=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>page<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> query <span class=\"token operator\">=</span> querystring<span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> page <span class=\"token operator\">=</span> query<span class=\"token punctuation\">.</span>page <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Orders</span></span> <span class=\"token attr-name\">currentPage</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>page<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onPageChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handlePageChange<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>So when you need to change filter / pagination, you route will change from <code class=\"language-text\">/orders</code> to <code class=\"language-text\">/orders?page=2</code>, and you could catch that change in the <code class=\"language-text\">componentDidUpdate</code> lifecycle hook and refetch it based on the route change.</p>\n<p>one big pro for this approach is that you get <code class=\"language-text\">go back</code> action in browser for free! imagine that you are building an e-commerce app, when user goes inside into the details of the order and wants to update some order details, he / she may just click <code class=\"language-text\">go back</code> on browser without intention to lose the previous filters, control those filter state on route suites perfectly into this situation.</p>\n<p>Another pro is by using URL to control filters, even if the user refreshes the browser, he / she won't loose the selected statuses</p>\n<h2>control # of root reducers</h2>\n<p>with all of the concept and tips above, actually we have made our store very clean normally the store will look like this</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">combineReducers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  form<span class=\"token punctuation\">,</span>\n  loadings<span class=\"token punctuation\">,</span>\n  messages<span class=\"token punctuation\">,</span>\n  router<span class=\"token punctuation\">,</span>\n  resources<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>all http request / response are squashed to the <code class=\"language-text\">resources</code> namespace</li>\n<li>displaying loading or not could be purely controlled by the <code class=\"language-text\">loadings</code> reducer</li>\n<li><code class=\"language-text\">messages</code> will be used to show / hide toast messages / error message on the page</li>\n<li>router, usually with aid of <code class=\"language-text\">connected-react-router</code> we could bind redux state with actually router</li>\n<li><code class=\"language-text\">form</code> is controlled by redux-form</li>\n</ol>\n<p>Limiting # of root reducers helps your to tidy up the store in a much cleaner way, rather than putting 100 keys at the root, when you get the redux-state tree, you always know where to find what.</p>","frontmatter":{"title":"Tips for making a mid-scale react application"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blogs/how-to-build-middle-scaled-react-app"}}}